# Build Configuration for Travis CI
# https://travis-ci.org

language: cpp
dist: xenial

cache:
  - ccache

matrix:
  fast_finish: true # Show final status immediately if a test fails.
  include:

    # 64-bit Linux GCC build
    - os: linux
      compiler: gcc
      env: ARCH=x86_64

    # 64-bit Linux Clang build
    - os: linux
      compiler: clang
      env: ARCH=x86_64

    # 32-bit Linux GCC build
    - os: linux
      compiler: gcc
      env: ARCH=x86

    # 32-bit Linux Clang build
    - os: linux
      compiler: clang
      env: ARCH=x86

   # MacOS Clang build
    - os: osx
      compiler: clang

#   # Windows build
#   - os: windows

# Use set -e so that the build fails when a command fails.
# The default action for Travis-CI is to continue running even if a command fails.
# See https://github.com/travis-ci/travis-ci/issues/1066.
# Use the YAML block scalar header (|) to allow easier multiline script coding.

before_install:
  - set -e
  - |
    if [ $TRAVIS_OS_NAME = linux ] && [ $ARCH = x86 ]; then
      sudo apt-get install {gcc,g++}-multilib;
      export CC='gcc -m32';
      export CXX='g++ -m32';
      export PKG_CONFIG_PATH='/usr/lib32/pkgconfig';
    fi
  - export core_count=$(nproc || echo 4) && echo core_count = $core_count
  - |
    if [ $TRAVIS_OS_NAME = linux ]; then
      # ccache not supported on MacOs
      ccache --version
      ccache --zero-stats
      export CCACHE_COMPRESS=true
      export CCACHE_COMPRESSLEVEL=9
    fi
  - set +e

script:
  - |
    if [[ "${TRAVIS_OS_NAME}" != "osx" ]]; then
      set -e
    fi
  - |
    mkdir build
    cd build
    python ../scripts/update_deps.py
    cmake -C helper.cmake ..
    cmake --build . -- -j$core_count
  - |
    if [[ "${TRAVIS_OS_NAME}" != "osx" ]]; then
      set +e
    fi

notifications:
  email:
    recipients:
      - s.fricke@samsung.com
    on_success: change
    on_failure: always
